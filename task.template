//@formatter:on
#include "general/base.hpp"
#include "general/prng.hpp"
#include "general/speed.hpp"

using namespace std;

//#define INTERACTIVE

class %ClassName%
{
public:
	static constexpr std::int64_t stressTestIterations{};
	static constexpr bool bruteForceAllIterations{};
	static constexpr bool bruteForceEmptyTests{};
	static constexpr bool showTestingOutput{true};
	static constexpr bool showAllTestingOutput{};
	static constexpr bool showFalseTestOutput{true};
	static constexpr bool floatingPointVerification{};
	static constexpr std::uint32_t MAXN{static_cast<std::uint32_t>(2e5 + 7)};
	static constexpr std::int32_t IINF{static_cast<std::int32_t>(2e9 + 7)};
	static constexpr std::int64_t LLINF{static_cast<std::int64_t>(2e18 + 7)};
	static constexpr long double EPSILON{static_cast<long double>(1e-7)};
	static bool bruteForceSolveIteration;

	void static generate_test(const std::uint64_t& seed)
	{
		std::mt19937_64 prng{seed};

	}

	int brute_force()
	{

		return 0;
	}

	void setup()
	{
		std::cout << std::setprecision(12) << std::fixed;

	}

	int solve(std::istream& in, std::ostream& out)
	{
		#if defined(CODE_JAM) || defined(LIGHT_OJ)
		output_case();
		#endif
		return bruteForceAllIterations || bruteForceSolveIteration ? brute_force() : solve();
	}

	int solve()
	{

		return 0;
	}
	// You're bad and probably overflowed. If you're being extra bad, you may have underflowed taking modulo or something stupid like that. Fix that.
};

bool %ClassName%::bruteForceSolveIteration{};
